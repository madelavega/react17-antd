{"version":3,"sources":["routes.js","documents/components/List.jsx","documents/consts.js","documents/components/Filter.jsx","documents/components/DocumentCreator.jsx","documents/components/index.jsx","utils/components/BreadcrumbItem.jsx","utils/redux/actionGenerators.js","documents/actions.js","documents/Container.js","home/index.jsx","App.js","documents/reducer.js","appReducer.js","utils/rest/Api.js","documents/sagas.js","sagas.js","store.js","reportWebVitals.js","index.js"],"names":["paths","ROOT","appConfig","HOME","DOCUMENTS","routes","breadcrumbs","path","breadcrumbName","columns","title","dataIndex","width","ellipsis","render","documentName","href","group","sorter","a","b","localeCompare","sortDirections","status","date","moment","format","dataModified","type","address","Title","Typography","Option","Select","List","loadDocuments","filters","documents","loading","total","useEffect","style","margin","flex","level","defaultValue","bordered","value","data-testid","paddingTop","rowKey","dataSource","pagination","showTotal","range","onChange","page","pageSize","statusFiltersOptions","text","groups","Sider","Layout","Panel","Collapse","Group","Checkbox","DocumentsFilter","filterChange","useState","collapsed","setCollapsed","collapsible","onCollapse","collapsedWidth","theme","trigger","MenuUnfoldOutlined","MenuFoldOutlined","zeroWidthTriggerStyle","bottom","left","top","className","ghost","expandIconPosition","expandIcon","isActive","UpOutlined","DownOutlined","header","values","direction","align","map","FormItem","Form","Item","createDocument","creating","error","document","useForm","form","readyToSave","setReadyToSave","nameFile","createRef","notification","message","description","openNotification","current","focus","onFinish","resetFields","name","label","marginBottom","ref","target","length","placeholder","placement","disabled","icon","PlusOutlined","htmlType","Content","breadcrumb","itemRender","to","Documents","clearDocuments","height","DocumentCreator","actionSuffix","asyncDoneAction","action","asyncFailedAction","actionGenerator","prefix","actionBase","Error","actionPrefix","genAction","syncAction","asyncAction","ACTION_PREFIX","actions","loadDocumentsRequest","actionGenerators","actionCreators","payload","rest","connect","documentBrowser","dispatch","Math","floor","random","Home","justifyContent","App","exact","initialState","reducer","state","actionTypes","combineReducers","httpErrors","formatError","statusText","url","stackTrace","errorInfo","Api","reduce","acc","method","cfg","Promise","resolve","reject","URL","baseURI","queryParams","search","URLSearchParams","fetch","then","response","ok","json","data","catch","e","doFetch","urlParams","re","match","exec","replace","lastIndex","resolveUrlTemplate","toUpperCase","Object","keys","join","_page","_limit","get","headers","put","newDocument","post","body","JSON","stringify","sagas","takeLatest","rootSaga","all","documentSagas","sagaMiddleware","createSagaMiddleware","store","createStore","appReducer","compose","applyMiddleware","run","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.deefe7c0.chunk.js","sourcesContent":["export const paths = {\n  // eslint-disable-next-line no-undef\n  ROOT : appConfig.rootPath,\n  HOME : 'home',\n  DOCUMENTS : 'documents'\n}\nconst routes = {\n  HOME      : `${paths.ROOT}/${paths.HOME}`,\n  DOCUMENTS : `${paths.ROOT}/${paths.DOCUMENTS}`,\n}\nexport const breadcrumbs = [\n  {\n    path          : paths.HOME,\n    breadcrumbName: 'Home',\n  }, {\n    path : paths.DOCUMENTS,\n    breadcrumbName: 'Documents'\n  }\n];\n\nexport default routes;","import React, {useEffect} from 'react';\nimport {Button, Card, Col, Select, Row, Table, Typography} from 'antd';\nimport moment from 'moment';\n\nconst columns = [\n  {\n    title: 'Channel',\n    dataIndex: 'channel',\n    width : 50,\n  },\n  {\n    title: 'Document Name',\n    ellipsis: true,\n    dataIndex: 'documentName',\n    render: documentName => <a href=\"/#\">{documentName}</a>,\n    width: 200\n  },\n  {\n    title: 'Group',\n    dataIndex: 'group',\n    render: group => <a href=\"/#\">{group}</a>,\n    width : 50,\n    sorter: ({group: a = ''}, {group: b= ''}) => a.localeCompare(b),\n    sortDirections: ['descend', 'ascend'],\n  },\n  {\n    title: 'Status',\n    dataIndex: 'status',\n    width : 50,\n    sorter: ({status: a = ''}, {status: b= ''}) => a.localeCompare(b),\n    sortDirections: ['descend', 'ascend'],\n  },\n  {\n    title: 'Data Modified',\n    dataIndex: 'dataModified',\n    width : 80,\n    render: date => moment(date, 'YYYYDDMM').format('YYYY-DD-MM'),\n    sorter: (a, b) =>  moment(a.dataModified, 'YYYYDDMM') - moment(b.dataModified, 'YYYYDDMM'),\n    sortDirections: ['descend', 'ascend'],\n  },\n  {\n    title: 'Type',\n    dataIndex: 'type',\n    width : 50,\n    sorter: ({type: a = ''}, {type: b= ''}) => a.localeCompare(b),\n    sortDirections: ['descend', 'ascend'],\n  },\n  {\n    title: 'Address',\n    dataIndex: 'address',\n    render: address => <a href=\"/#\">{address}</a>,\n    width : 150,\n  },\n],\n      { Title } = Typography,\n      { Option } = Select;\n\nconst List = ({\n                loadDocuments,\n                filters,\n                documents,\n                loading,\n                total,\n              }) => {\n\n  useEffect(() => {\n      loadDocuments?.(filters);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filters]);\n\n  const onPageChange = (page, pageSize) => {\n    loadDocuments(filters, page, pageSize);\n  }\n\n  return (\n    <Card  style={{ margin: '0 24px 24px' }}>\n      <Row>\n        <Col flex=\"auto\" >\n          <Title level={5}>Dashboard</Title>\n        </Col>\n        <Col flex=\"none\">\n          <Select defaultValue=\"date\" bordered={false}>\n            <Option value=\"date\">Date</Option>\n          </Select>\n            <Button>Reset</Button>\n        </Col>\n      </Row>\n      <Row>\n        <Table\n          data-testid=\"documents-list\"\n          style={{paddingTop: 16}}\n          loading={loading}\n          rowKey=\"id\"\n          columns={columns}\n          dataSource={documents}\n          pagination={{\n            showTotal: (total, range) => `${range[0]}-${range[1]} of ${total} documents`,\n            onChange : onPageChange,\n            total\n          }}\n        />\n      </Row>\n    </Card>\n  )\n}\n\nexport default List;","export const statusFiltersOptions = [{\n  text: 'Received',\n  value : 'received'\n}, {\n  text : 'Printed',\n  value : 'printed'\n}, {\n  text : 'Folded',\n  value : 'folded'\n}, {\n  text: 'Sorted',\n  value : 'Sorted'\n}, {\n  text : 'Delivered',\n  value : 'delivered'\n}];\n\nexport const groups = {\n  STATUS : 'status',\n  ADDRESS: 'address',\n  DATE: 'date',\n  GROUP: 'group',\n  DATE_RANGE: 'dateRange'\n}","import React, { useState } from 'react';\nimport { Layout, Checkbox, Space, Typography, Collapse } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UpOutlined,\n  DownOutlined\n} from '@ant-design/icons';\nimport {groups, statusFiltersOptions} from '../consts';\n\nconst { Sider } = Layout,\n      { Panel } = Collapse,\n      {Group} = Checkbox,\n      { Title } = Typography;\n\nexport default function DocumentsFilter({\n  filterChange\n                                        }) {\n  const [ collapsed, setCollapsed ] = useState(false),\n    groupFilterChange = (group) => (values) => filterChange(group, values);\n\n  return (\n    <Sider\n      collapsible\n      collapsed={collapsed}\n      onCollapse={setCollapsed}\n      collapsedWidth={0}\n      theme=\"light\"\n      trigger={collapsed ? <MenuUnfoldOutlined/> : <MenuFoldOutlined/>}\n      zeroWidthTriggerStyle={{\n        bottom: 0,\n        left: 0,\n        width: 41,\n        top : 'initial'\n      }}\n    >\n      <Title className=\"filter-title\" level={5}>Filters</Title>\n      <Collapse\n        ghost\n        expandIconPosition=\"right\"\n        expandIcon = { ({isActive}) => isActive ? <UpOutlined /> : <DownOutlined /> }\n      >\n        <Panel header=\"Address\" key={groups.ADDRESS}>\n        </Panel>\n        <Panel header=\"Date\" key={groups.DATE}>\n        </Panel>\n        <Panel header=\"Status\" key={groups.STATUS}>\n          <Group style={{width: '100%'}} onChange={groupFilterChange(groups.STATUS)}>\n            <Space direction=\"vertical\" align=\"center\" style={{width: '100%'}}>\n              {statusFiltersOptions.map(({value, text}) => <Checkbox style={{width: 100}} value={value} key={value}>{text}</Checkbox>)}\n            </Space>\n          </Group>\n        </Panel>\n        <Panel header=\"Group\" key={groups.GROUP}>\n        </Panel>\n        <Panel header=\"Date Range\" key={groups.DATE_RANGE}>\n        </Panel>\n      </Collapse>\n    </Sider>\n  )\n}","import React, { useEffect, createRef, useState } from 'react';\nimport {Input, Form, Button, Col, Row, Card, notification, Tooltip } from 'antd';\nimport {PlusOutlined} from '@ant-design/icons';\n\nconst {Item : FormItem} = Form;\n\nconst List = ({\n                createDocument,\n                creating,\n                error,\n                document\n  }) => {\n\n  const [form] = Form.useForm(),\n       [readyToSave, setReadyToSave] = useState(false),\n\n        nameFile = createRef(),\n\n        openNotification = (error) => {\n          notification[error ? 'error' : 'success']({\n            message: error\n              ? 'There was an error saving the document'\n              : 'Document saved!',\n            description: !error && `The document ${document?.documentName} has been saved`\n          });\n        },\n\n        valueChange = ({target}) => {\n          if(target?.value?.length) {\n            setReadyToSave(true);\n          } else {\n            setReadyToSave(false);\n          }\n        },\n\n        onFinish = (document) => {\n          createDocument(document);\n          setReadyToSave(false);\n          form.resetFields();\n        };\n\n  useEffect(() => {\n    //the first time creating is null\n    if(creating === false) {\n      openNotification(error);\n    } else if(creating === null) {\n      nameFile.current.focus();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [creating]);\n\n  return (\n    <Card style={{ margin: '0 24px 24px' }}>\n      <Form onFinish={onFinish} form={form}>\n        <Row>\n          <Col flex=\"auto\">\n            <FormItem name={['document', 'documentName']} label=\"Doc. Name\" style={{width: \"50%\", marginBottom: '0px'}}>\n              <Input data-testid=\"new-document-input\" ref={nameFile} onChange={valueChange} placeholder=\"New document...\"/>\n            </FormItem>\n          </Col>\n          <Col>\n            <FormItem style={{marginBottom: '0px'}}>\n              <Tooltip placement=\"left\" title={readyToSave ? 'Save the new document' : 'Type the document name to enable this button'}>\n                <Button data-testid=\"save-document\" disabled={!readyToSave} type=\"primary\" loading={creating || false /*null protection*/} icon={<PlusOutlined/>} htmlType=\"submit\">Add New</Button>\n              </Tooltip>\n            </FormItem>\n          </Col>\n        </Row>\n      </Form>\n    </Card>\n  )\n}\n\nexport default List;","import React, {useEffect} from 'react';\nimport {Layout, PageHeader} from 'antd';\nimport DocumentsList from './List';\nimport DocumentsFilter from './Filter';\nimport {breadcrumbs as routes} from '../../routes';\nimport BreadcrumbItem from '../../utils/components/BreadcrumbItem';\nimport DocumentCreator from './DocumentCreator';\nimport './index.css';\n\nconst { Content } = Layout,\n      breadcrumb = { routes , itemRender : BreadcrumbItem };\n\nconst Documents = ({\n                     loadDocuments,\n                     documents,\n                     document,\n                     filterChange,\n                     filters,\n                     createDocument,\n                     creating,\n                     loading,\n                     total,\n                     clearDocuments\n                   }) => {\n\n  //unmount...\n  useEffect(() => {\n    return () => {\n      clearDocuments?.();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Layout style={{height: \"100vh\"}}>\n      <DocumentsFilter\n        filterChange={filterChange}\n      />\n      <Content>\n        <Layout>\n          <PageHeader\n            title=\"Document Browser\"\n            breadcrumb={breadcrumb}\n          />\n          <DocumentCreator\n            createDocument={createDocument}\n            creating={creating}\n            document={document}\n          />\n          <DocumentsList\n            documents={documents}\n            loadDocuments={loadDocuments}\n            filters={filters}\n            creating={creating}\n            loading={loading}\n            total={total}\n          />\n        </Layout>\n      </Content>\n    </Layout>\n  )\n}\n\nexport default Documents;","import { Link } from 'react-router-dom';\n\nexport default function BreadcrumbItem(\n  {\n      breadcrumbName,\n      path\n  }) {\n    return <Link to={path}>{breadcrumbName}</Link>\n}","export const actionSuffix = {\n  DONE  : '__DONE',\n  FAILED: '__FAILED',\n};\n\nconst genAction = (actionPrefix, action) => `${actionPrefix}_${action}`,\n      asyncDoneAction = (action) => () => `${action}${actionSuffix.DONE}`,\n      asyncFailedAction = (action) => () => `${action}${actionSuffix.FAILED}`;\n\n/**\n *\n * @param {string} prefix prefix for the action\n * @param {string} actionBase base of the action to be enhance\n * @returns {{requestDoneAction(*), action: string, requestFailedAction(*)}}\n */\nconst actionGenerator = (prefix, actionBase) => {\n  if(!prefix) {\n    throw new Error('Empty prefix is not allowed. Please, send a prefix for your action (for example, the name of the related component)');\n  }\n  const action = genAction(prefix, actionBase);\n  return {\n    syncAction        : () => action,\n    asyncAction       : () => action,\n    asyncDoneAction   : asyncDoneAction(action),\n    asyncFailedAction : asyncFailedAction(action),\n  };\n};\n\nexport default actionGenerator;","import actionGenerators from '../utils/redux/actionGenerators';\n\nconst ACTION_PREFIX = 'DOCUMENTS',\n      LOAD_DOCUMENTS = 'LOAD_DOCUMENTS',\n      CREATE_DOCUMENT = 'CREATE_DOCUMENT',\n      FILTER_CHANGE = 'FILTER_CHANGE',\n      CLEAR_DOCUMENTS = 'CLEAR_DOCUMENTS';\n\nexport const actions = {\n  /**\n   * Load documents\n   */\n  loadDocumentsRequest : actionGenerators(ACTION_PREFIX, LOAD_DOCUMENTS),\n\n  /**\n   * save new document\n   */\n  createDocument : actionGenerators(ACTION_PREFIX, CREATE_DOCUMENT),\n\n  /**\n   * filter change\n   */\n  filterChange : actionGenerators(ACTION_PREFIX, FILTER_CHANGE),\n\n  /**\n   * Clear documents\n   */\n  clearDocuments : actionGenerators(ACTION_PREFIX, CLEAR_DOCUMENTS),\n};\n\nexport const actionCreators = {\n  /**\n   * Fires the LOAD_DOCUMENTS_REQUESTED action to load documents data with the provided filters\n   *\n   * @param {Object} filters\n   * @param {Number} page\n   * @param {Number} pageSize\n   * @returns {{payload: {date}, type: string}}\n   */\n  loadDocuments: (filters = {}, page = 0, pageSize = 10) => ({\n    type   : actions.loadDocumentsRequest.asyncAction(),\n    payload: { filters, page, pageSize },\n  }),\n\n  /**\n   * Fires the LOAD_DOCUMENTS_DONE action with the loaded documents data, after doing a request\n   *\n   * @param documents\n   * @returns {{payload: {documents, total}, type: string}}\n   */\n  loadDocumentsDone: (documents, total) => ({\n    type   : actions.loadDocumentsRequest.asyncDoneAction(),\n    payload: { documents, total },\n  }),\n\n  /**\n   * Fires the LOAD_DOCUMENTS_FAILED action, when something wrong happens when LOAD_DOCUMENTS_REQUESTED is dispatched\n   * @param data\n   * @returns {{payload: {data}, type: string}}\n   */\n  loadDocumentsFailed: ({ error, ...rest }) => ({\n    type   :  actions.loadDocumentsRequest.asyncFailedAction(),\n    payload: { error, ...rest },\n  }),\n\n  /**\n   * Fires the CREATE_DOCUMENT_REQUESTED action to save a new document\n   *\n   * @param {object} document\n   * @returns {{payload: {document}, type: object}}\n   */\n  createDocument: (document) => ({\n    type   : actions.createDocument.asyncAction(),\n    payload: document,\n  }),\n\n  /**\n   * Fires the CREATE_DOCUMENT_DONE action with the created document data\n   *\n   * @param {object} document\n   * @returns {{payload: {document}, type: object}}\n   */\n  createDocumentDone: (document) => ({\n    type   : actions.createDocument.asyncDoneAction(),\n    payload: { document },\n  }),\n\n  /**\n   * Fires the CREATE_DOCUMENT_FAILED action, when something wrong happens when CREATE_DOCUMENT_REQUESTED is dispatched\n   * @param data\n   * @returns {{payload: {data}, type: string}}\n   */\n  createDocumentFailed: ({ error, ...rest }) => ({\n    type   : actions.createDocument.asyncFailedAction(),\n    payload: { error, ...rest },\n  }),\n\n  /**\n   * Fires the FILTER_CHANGE action, when the documents criteria have changes\n   * @param {String} group\n   * @param {[String]} values\n   */\n  filterChange: (group, values) => ({\n    type   : actions.filterChange.syncAction(),\n    payload: { group, values },\n  }),\n\n  /**\n   * Clear documents data\n   * @returns {{type: *}}\n   */\n  clearDocuments : () => ({\n    type   : actions.clearDocuments.syncAction(),\n  })\n};","import Documents from './components';\nimport { connect } from 'react-redux';\nimport { actionCreators } from './actions';\nimport moment from 'moment';\nimport {statusFiltersOptions} from './consts';\n\nconst mapStateToProps = ({documentBrowser}) => documentBrowser;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadDocuments   : (filters, page, pageSize) => dispatch(actionCreators.loadDocuments(filters, page, pageSize)),\n    clearDocuments  : () => dispatch(actionCreators.clearDocuments()),\n    filterChange    : (group, values) => dispatch(actionCreators.filterChange(group, values)),\n    createDocument  : (document) => {\n      //updating new document with more data\n      document = {\n        ...document,\n        dataModified : moment().format('YYYYDDMM'),\n        status : statusFiltersOptions[Math.floor(Math.random() * statusFiltersOptions.length-1)].value\n      }\n      dispatch(actionCreators.createDocument(document))\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Documents);","import React from 'react';\nimport {Card, Space} from 'antd';\nimport {Link} from 'react-router-dom';\nimport routes from '../routes';\n\nconst Home = () =>(\n        <Space direction=\"horizontal\" style={{width: '100%', justifyContent: 'center', paddingTop: '100px'}}>\n          <Card title=\"HOME\" style={{ width: 500 }}>\n            <Link to={routes.DOCUMENTS}>Documents</Link>\n          </Card>\n        </Space>\n);\n\nexport default Home;","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport routes from './routes';\nimport Documents from './documents/Container';\nimport Home from './home';\nimport './App.css';\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path={`${routes.HOME}`}>\n          <Home/>\n        </Route>\n        <Route exact path={`${routes.DOCUMENTS}`}>\n          <Documents/>\n        </Route>\n        <Route path=\"*\">\n          <Redirect to={`${routes.HOME}`} />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import { actions } from './actions.js';\n\nconst initialState = {\n  documents : [],\n  total     : 0,\n  loading   : false,\n  filters   : {},\n  creating  : null, //first time null. Later it will be a Boolean\n  error     : null,\n  document  : null\n};\n\nconst reducer = (state = initialState, action) => {\n  const actionTypes = {\n    [actions.loadDocumentsRequest.asyncAction()]: () => {\n      return {\n        ...state,\n        loading: true,\n      };\n    },\n    [actions.loadDocumentsRequest.asyncDoneAction()]: () => {\n      const { payload: { documents, total } = {} } = action;\n      return {\n        ...state,\n        loading: false,\n        documents,\n        total\n      };\n    },\n    [actions.loadDocumentsRequest.asyncFailedAction()]: () => {\n      return {\n        ...state,\n        loading: false,\n      };\n    },\n    [actions.createDocument.asyncAction()]: () => {\n      return {\n        ...state,\n        creating: true,\n        error   : null\n      };\n    },\n    [actions.createDocument.asyncDoneAction()]: () => {\n      const { payload: { document } = {} } = action;\n      return {\n        ...state,\n        creating: false,\n        error: null,\n        document,\n        total : ++state.total,\n        documents : [document, ...state.documents]\n      };\n    },\n    [actions.createDocument.asyncFailedAction()]: () => {\n      const { payload: { error } = {} } = action;\n      return {\n        ...state,\n        creating: false,\n        error\n      };\n    },\n    [actions.filterChange.syncAction()]: () => {\n      const { payload: { group, values } = {} } = action;\n      return {\n        ...state,\n        filters : {\n          ...state.filters,\n          [group] : values\n        },\n      };\n    },\n    [actions.clearDocuments.syncAction()]: () => ({...initialState}),\n  };\n  return actionTypes[action.type] ? actionTypes[action.type]() : state;\n};\n\nexport default reducer;","import { combineReducers } from 'redux';\nimport documentBrowser from './documents/reducer';\n\nexport default combineReducers({\n  documentBrowser\n});","//available HTTP methods\nconst methods = [ 'get', 'post', 'put', 'delete' ],\n      /**\n       *\n       * @param {string} url - template for url. Replaced properties must be wrapped into {}\n       * @param {Object} urlParams - properties to replace into url template\n       * @returns {string} url builded\n       */\n      resolveUrlTemplate = (url, urlParams) => {\n        const re = /\\{([^}]+)?\\}/g;\n\n        let match = re.exec(url);\n\n        while(match) {\n          url = url.replace(match[0], urlParams[match[1]]);\n          re.lastIndex = 0;\n          match = re.exec(url);\n        }\n        return url;\n      },\n      /**\n       * HTTP Status errors explanation\n       * @type {{'500': string, '401': string, '403': string, '404': string}}\n       */\n      httpErrors = {\n        '500': 'There was an unexpected error. If problem persists, please, contact with the system administrator',\n        '404': 'It was impossible to find the data you requested for',\n        '401': 'Sorry, you do not have permissions to that...',\n        '403': 'Sorry, you do not have permissions to that...',\n        //and so on...\n      },\n\n      /**\n       * Format error to be shown\n       *\n       * @param {string} statusText\n       * @param {number} status\n       * @param {string} message\n       * @param {string} url\n       * @param {*} stackTrace\n       * @returns {object} error parts (errorInfo and stackTrace)\n       */\n      formatError = ({ statusText, status, message, url, stackTrace }) => {\n        return {\n          errorInfo : [ status ? `(${status}) - ${statusText}\\n` : null, url, message ],\n          stackTrace: stackTrace,\n        };\n      },\n      /**\n       * Launch the request to the url.\n       * TODO it could be defined as a redux middleware, passing the api into the action, allowing the exceptions management\n       * were centralized into redux. Furthermore, the HTTP errors could be managed here too, wrapping into an object\n       * the HTTP status, headers, error data into the response payload, etc. and then propagate it to Redux store throw the action\n       * to show the error into a modal or whatever you want\n       *\n       * For the moment, it will display an alert with the basic http error data, because the Redux failure action from the saga\n       * only should manage the specific tasks for the request/origin action (for example, send the failure action to remove a\n       * loader spinner into a view, data cleaning...) but the common error treatment of the application must not be there.\n       *\n       *\n       * @param url\n       * @param cfg\n       * @returns {Promise<unknown>}\n       */\n        // eslint-disable-next-line no-undef\n      doFetch = (url, cfg) => new Promise((resolve, reject) => {\n        url = new URL(url, document.baseURI);\n        if(cfg.queryParams) {\n          url.search = new URLSearchParams(cfg.queryParams);\n        }\n        // eslint-disable-next-line no-undef\n        fetch(url, cfg).then(response => {\n          if(response.ok) {\n            response.json().then(json => {\n              resolve({ data : json, response});\n            }).catch(e => {\n              reject(formatError({ message: 'Malformed JSON', stackTrace: e, url: url }));\n            });\n          } else {\n            reject(formatError({\n              status    : response.status,\n              statusText: response.statusText,\n              message   : httpErrors[response.status],\n              url,\n            }));\n          }\n          //TODO format error\n        }).catch(e => {\n          reject(formatError({ message: e.message, stackTrace: e, url }));\n        });\n      }),\n\n      /**\n       * Object every method defined in methods, it will create a method with this name. To call them,\n       * you must pass the target url to the AJAX request and the cfg config for the fetch method.\n       *\n       * To allow url parameters, the method accept the url as a template and a urlParams inside the cfg\n       * configuration object. This urlParams must be an object with the values to replace the url template. For example:\n       *\n       * url /api/Users/{id}\n       * cfg = {\n       *     urlParameters : {\n       *         id : 2\n       *     }\n       * }\n       *\n       * You can use this Api like this:\n       * Api.get('api/{entity}/{id}/', {\n       *     urlParams : {\n       *         id : 2,\n       *         entity : 'users'\n       *     },\n       *      ... rest of the fetch api config properties\n       * });\n       *\n       * Api.delete('api/users/{id}', {\n       *     urlParams : {\n       *         id : 3\n       *     },\n       *     ... rest of the fetch api config properties\n       * })\n       */\n      Api = methods.reduce((acc, method) => {\n        return {\n          ...acc,\n          /**\n           * Call to fetch method to do a request with a url template (/api/users/{urlParameter}) and the cfg object\n           * for the fetch api. If the url is a template, the cfg object must contains a urlParams property, with\n           * the properties to be replaced into the url template\n           *\n           * @param {string} url\n           * @param {Object} cfg\n           * @returns {Promise}\n           */\n          [method]: (url, cfg) => doFetch(resolveUrlTemplate(url, cfg?.urlParams ?? {}), {\n            ...cfg,\n            method: method.toUpperCase(),\n          }),\n        };\n      }, {});\n\nexport default Api;","import 'regenerator-runtime/runtime';\nimport { put, takeLatest } from 'redux-saga/effects';\nimport { actions, actionCreators } from './actions';\nimport Api from '../utils/rest/Api';\n\n/**\n * Do a request to appEnvConfig.endpoints.documents endpoint (@see /config/{webpack_mode/services.js})\n * when the LOAD_DOCUMENTS_REQUESTED action is dispatched\n *\n * @param {object} action LOAD_DOCUMENTS_REQUESTED @see actions.LOAD_DOCUMENTS_REQUESTED\n * @returns {Generator<Promise<commander.ParseOptionsResult.unknown>|SimpleEffect<\"PUT\", PutEffectDescriptor<{payload: {data}, type: string}>>, void, *>}\n */\nexport const loadDocuments = function* (action) {\n  const { payload: { filters, page, pageSize } } = action,\n        //transform query parameters to be used for json server\n        queryParams = {\n          ...Object.keys(filters).reduce((acc, current) => ({\n            ...acc,\n            [`${current}_like`]: filters[current].join('|')\n          }), {}),\n          _page : page,\n          _limit : pageSize\n        }\n  try {\n    // eslint-disable-next-line no-undef\n    const { data : documents, response } = (yield Api.get(appConfig.endpoints.documents, {\n      queryParams,\n    }));\n    const total = response?.headers?.get(\"x-total-count\");\n    yield put(actionCreators.loadDocumentsDone(documents, total));\n  } catch (ex) {\n    yield put(actionCreators.loadDocumentsFailed( ex ));\n  }\n};\n\n/**\n * Do a request to appEnvConfig.endpoints.documents endpoint (@see /config/{webpack_mode/services.js})\n * when the CREATE_DOCUMENT_REQUESTED action is dispatched\n *\n * @param {object} action CREATE_DOCUMENT_REQUESTED @see actions.CREATE_DOCUMENT_REQUESTED\n * @returns {Generator<Promise<commander.ParseOptionsResult.unknown>|SimpleEffect<\"PUT\", PutEffectDescriptor<{payload: {data}, type: string}>>, void, *>}\n */\nexport const createDocument = function* (action) {\n  let { payload: { document : newDocument } } = action;\n  try {\n    // eslint-disable-next-line no-undef\n    const { data } = (yield Api.post(appConfig.endpoints.documents, {\n      headers :{'content-type': 'application/json'},\n      body: JSON.stringify(newDocument),\n    }));\n    yield put(actionCreators.createDocumentDone(data));\n  } catch (ex) {\n    yield put(actionCreators.createDocumentFailed( ex ));\n  }\n};\n\nconst sagas = [\n  takeLatest(actions.loadDocumentsRequest.asyncAction(), loadDocuments),\n  takeLatest(actions.createDocument.asyncAction(), createDocument),\n];\n\nexport default sagas;","import { all } from 'redux-saga/effects';\nimport documentSagas from './documents/sagas';\n\nexport default function* rootSaga() {\n  yield all([\n    ...documentSagas,\n  ]);\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport appReducer from './appReducer';\nimport sagas from './sagas.js';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  appReducer,\n  compose(applyMiddleware(\n    sagaMiddleware,\n  )),\n);\n\nsagaMiddleware.run(sagas);\n\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App/>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}